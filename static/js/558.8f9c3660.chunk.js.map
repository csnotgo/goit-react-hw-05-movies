{"version":3,"file":"static/js/558.8f9c3660.chunk.js","mappings":"+OAEaA,E,OAAMC,GAAAA,IAAH,gF,SCEHC,EAAa,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,OACE,2BACE,UAACL,EAAD,YACE,gBACEM,IAAKH,EAAO,kCAAoCA,EAAOI,EACvDC,IAAKJ,EACLK,MAAM,KACNC,OAAO,KACPC,MAAO,CAAEC,aAAc,UAEzB,uBAAIR,QAEN,uBAAIC,MAGT,ECkBD,EAjCgB,WACd,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAAAG,GAAI,OAAIR,EAAWQ,EAAKC,QAApB,GAEb,GAAE,KAGD,0BACE,wBACsB,IAAnBV,EAAQW,OACPX,EAAQY,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,GAAIvB,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASuB,EAAkB,EAAlBA,YAClC,OACE,SAAC1B,EAAD,CAEEC,KAAMyB,EACNxB,OAAQA,EACRC,QAASA,GAHJsB,EAMV,KAED,6FAKT,C,uJCpCD,IAAME,EAAM,mCACNC,EAAW,+BAEJC,EAAqB,WAChC,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,GACxD,EAEYI,EAAkB,SAAAC,GAC7B,OAAOF,MAAM,GAAD,OAAIF,EAAJ,kBAAsBI,EAAtB,oBAA0CL,GACvD,EAEYM,EAAiB,SAAAD,GAC5B,OAAOF,MAAM,GAAD,OAAIF,EAAJ,kBAAsBI,EAAtB,4BAAkDL,GAC/D,EAEYV,EAAoB,SAAAe,GAC/B,OAAOF,MAAM,GAAD,OAAIF,EAAJ,kBAAsBI,EAAtB,4BAAkDL,GAC/D,EAEYO,EAAqB,SAAAC,GAChC,OAAOL,MAAM,GAAD,OAAIF,EAAJ,iCAAqCD,EAArC,kBAAkDQ,GAC/D,C","sources":["components/ReviewItem/ReviewItem.styled.jsx","components/ReviewItem/ReviewItem.jsx","pages/Reviews/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport defaultImg from './defaultImage.jpg';\nimport { Box } from './ReviewItem.styled';\n\nexport const ReviewItem = ({ path, author, content }) => {\n  return (\n    <li>\n      <Box>\n        <img\n          src={path ? 'https://image.tmdb.org/t/p/w200' + path : defaultImg}\n          alt={author}\n          width=\"40\"\n          height=\"40\"\n          style={{ borderRadius: '50%' }}\n        />\n        <b>{author}</b>\n      </Box>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewItem.propTypes = {\n  path: PropTypes.string,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movieApi';\nimport { ReviewItem } from 'components/ReviewItem/ReviewItem';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(r => r.json())\n      .then(data => setReviews(data.results));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length !== 0 ? (\n          reviews.map(({ id, author, content, avatar_path }) => {\n            return (\n              <ReviewItem\n                key={id}\n                path={avatar_path}\n                author={author}\n                content={content}\n              />\n            );\n          })\n        ) : (\n          <p>We don't have any reviews for this movie ¯\\_(ツ)_/¯</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","const KEY = 'fc76c86b365a6387a5436d26b34344ea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n};\n\nexport const fetchMoviesById = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`);\n};\n\nexport const fetchMovieCast = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`);\n};\n\nexport const fetchMovieReviews = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`);\n};\n\nexport const fetchMovieBySearch = query => {\n  return fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`);\n};\n"],"names":["Box","styled","ReviewItem","path","author","content","src","defaultImg","alt","width","height","style","borderRadius","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","r","json","data","results","length","map","id","avatar_path","KEY","BASE_URL","fetchPopularMovies","fetch","fetchMoviesById","movie_id","fetchMovieCast","fetchMovieBySearch","query"],"sourceRoot":""}