{"version":3,"file":"static/js/257.081b3044.chunk.js","mappings":"4PAGaA,EAAOC,EAAAA,GAAAA,GAAH,gUAaJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mEAKRG,EAAQH,EAAAA,GAAAA,GAAH,8C,0IClBLI,EAAOJ,EAAAA,GAAAA,GAAH,iKAUJE,GAAOF,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,qT,kBCgEjB,EAvEqB,WAAO,IAAD,IACzB,GAA0BM,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAAAG,GAAI,OAAIV,EAASU,EAAb,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,IAEH,IAAQG,EACNhB,EADMgB,MAAOC,EACbjB,EADaiB,aAAcC,EAC3BlB,EAD2BkB,aAAcC,EACzCnB,EADyCmB,YAAaC,EACtDpB,EADsDoB,SAAUC,EAChErB,EADgEqB,OAG5DC,EAAY,UAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,KAC/BC,EAAa,UAAGrB,EAASmB,aAAZ,aAAG,EAAgBG,KAEtC,OACE,iBAAKC,MAAO,CAAEC,QAAS,aAAvB,WACE,SAAC,KAAD,CAAUC,GAAE,OAAEP,QAAF,IAAEA,EAAAA,EAAgBG,EAA9B,mCACA,iBAAKE,MAAO,CAAEG,QAAS,OAAQC,IAAK,OAAQH,QAAS,aAArD,WACE,gBACEI,IAAKb,GAAe,kCAAoCA,EACxDc,IAAKjB,EACLkB,OAAO,SAET,iBAAKP,MAAO,CAAEG,QAAS,OAAQK,cAAe,UAA9C,WACE,0BACGnB,EADH,KACY,IAAIoB,KAAKnB,GAAcoB,cADnC,QAGA,wCAAgBnB,MAChB,sCACA,uBAAIE,KACJ,oCACA,uBAAIC,GAAUA,EAAOiB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAGtD,eAAIb,MAAO,CAAEc,UAAW,UAAxB,qCACA,UAAC5C,EAAD,YACE,yBACE,SAACF,EAAD,CACEkC,GAAI,OACJN,MAAO,CACLC,KAAMF,EACNI,KAAMD,GAJV,qBAUF,yBACE,SAAC9B,EAAD,CACEkC,GAAI,UACJN,MAAO,CACLC,KAAMF,EACNI,KAAMD,GAJV,2BAWJ,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD,QAIP,C,uJC3ED,IAAMC,EAAM,mCACNC,EAAW,+BAEJC,EAAqB,WAChC,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,GACxD,EAEYpC,EAAkB,SAAAwC,GAC7B,OAAOD,MAAM,GAAD,OAAIF,EAAJ,kBAAsBG,EAAtB,oBAA0CJ,GACvD,EAEYK,EAAiB,SAAAD,GAC5B,OAAOD,MAAM,GAAD,OAAIF,EAAJ,kBAAsBG,EAAtB,4BAAkDJ,GAC/D,EAEYM,EAAoB,SAAAF,GAC/B,OAAOD,MAAM,GAAD,OAAIF,EAAJ,kBAAsBG,EAAtB,4BAAkDJ,GAC/D,EAEYO,EAAqB,SAAAC,GAChC,OAAOL,MAAM,GAAD,OAAIF,EAAJ,iCAAqCD,EAArC,kBAAkDQ,GAC/D,C","sources":["components/PopularMovieItem/PopularMovieItem.styled.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: 300px;\n  height: 550px;\n  border: 1px solid gray;\n\n  :hover,\n  :focus {\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n      rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n      rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  }\n`;\n\nexport const LinkItem = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  height: 40px;\n\n  border-bottom: 1px solid gray;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 5px 30px;\n\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    border-radius: 20px;\n    background-color: blue;\n    color: white;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: blue;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/movieApi';\nimport { Link, List } from './MovieDetails.styled';\nimport { LinkItem } from 'components/PopularMovieItem/PopularMovieItem.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMoviesById(movieId)\n      .then(r => r.json())\n      .then(film => setMovie(film))\n      .catch(error => console.log(error));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { title, release_date, vote_average, poster_path, overview, genres } =\n    movie;\n\n  const homeLocation = location.state?.home;\n  const movieLocation = location.state?.from;\n\n  return (\n    <div style={{ padding: '20px 10px' }}>\n      <LinkItem to={homeLocation ?? movieLocation}>ðŸ”° Go back</LinkItem>\n      <div style={{ display: 'flex', gap: '20px', padding: '20px 10px' }}>\n        <img\n          src={poster_path && 'https://image.tmdb.org/t/p/w300' + poster_path}\n          alt={title}\n          height=\"450\"\n        />\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <h1>\n            {title} ({new Date(release_date).getFullYear()})\n          </h1>\n          <p>User score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres && genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <h2 style={{ textAlign: 'center' }}>Additional information</h2>\n      <List>\n        <li>\n          <Link\n            to={'cast'}\n            state={{\n              home: homeLocation,\n              from: movieLocation,\n            }}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={'reviews'}\n            state={{\n              home: homeLocation,\n              from: movieLocation,\n            }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </List>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const KEY = 'fc76c86b365a6387a5436d26b34344ea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n};\n\nexport const fetchMoviesById = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}?api_key=${KEY}`);\n};\n\nexport const fetchMovieCast = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}/credits?api_key=${KEY}`);\n};\n\nexport const fetchMovieReviews = movie_id => {\n  return fetch(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}`);\n};\n\nexport const fetchMovieBySearch = query => {\n  return fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`);\n};\n"],"names":["Item","styled","LinkItem","Link","Title","List","NavLink","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","fetchMoviesById","then","r","json","film","catch","error","console","log","title","release_date","vote_average","poster_path","overview","genres","homeLocation","state","home","movieLocation","from","style","padding","to","display","gap","src","alt","height","flexDirection","Date","getFullYear","map","name","join","textAlign","Suspense","KEY","BASE_URL","fetchPopularMovies","fetch","movie_id","fetchMovieCast","fetchMovieReviews","fetchMovieBySearch","query"],"sourceRoot":""}